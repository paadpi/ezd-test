apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-rabbitmq-queue"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  containers:
    - name: rabbitmq-client
      image: rabbitmq:management
      env:
        - name: RABBITMQ_USERNAME
          value: "{{ .Values.rabbitmqConfig.auth.username }}"
        - name: RABBITMQ_PASSWORD
          value: "{{ .Values.rabbitmqConfig.auth.password }}"
      command:
        - sh
        - "-c"
        - |
          echo "Creating queue 'testqueue'..." &&
          rabbitmqadmin -u $RABBITMQ_USERNAME -p $RABBITMQ_PASSWORD -H lp-backend-rabbitmq -V / declare queue name=testqueue durable=true &&
          echo "Publishing message to queue 'testqueue'..." &&
          rabbitmqadmin -u $RABBITMQ_USERNAME -p $RABBITMQ_PASSWORD -H lp-backend-rabbitmq -V / publish exchange=amq.default routing_key=testqueue payload="Test Message" &&
          echo "Fetching message from queue 'testqueue'..." &&
          rabbitmqadmin -u $RABBITMQ_USERNAME -p $RABBITMQ_PASSWORD -H lp-backend-rabbitmq -V / get queue=testqueue &&
          echo "Retrieved message from queue 'testqueue'..." &&
          rabbitmqadmin -u $RABBITMQ_USERNAME -p $RABBITMQ_PASSWORD -H lp-backend-rabbitmq -V / delete queue name=testqueue &&
          echo "Queue testqueue deleted successfully."
          echo "Test passed: Message successfully published, fetched and deleted from queue."
  restartPolicy: Never